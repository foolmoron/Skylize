// Generated by CoffeeScript 1.7.1
var Client, SL, _ref;

SL = window.SL = (_ref = window.SL) != null ? _ref : {};

SL.GOOGLE_API_KEY = "AIzaSyClmp-OcgOFVF9fPybWuFAutXOlYr7PAl8";

SL.SPRITE_DIRECTORY = "./sprites/";

SL.FONTSHEET_DIRECTORY = "./font/";

SL.AUDIO_DIRECTORY = "./audio/";

SL.GRID_SIZE = 15;

SL.TILE_SIZE = 48;

SL.tex = {};

SL.font = {};

Client = IgeClass.extend({
  classId: 'Client',
  init: function() {
    ige.globalSmoothing(true);
    $.ajaxSetup({
      async: false,
      contentType: 'application/json'
    });
    ige.on('texturesLoaded', (function(_this) {
      return function() {
        ige.createFrontBuffer(true);
        return ige.start(function(success) {
          if (success) {
            ige.viewportDepth(true);
            _this.setupScene();
            return _this.setupEntities();
          }
        });
      };
    })(this));
    return this.load();
  },
  setupScene: function() {
    this.mainScene = new IgeScene2d().id('mainScene');
    this.vpMain = new IgeViewport().id('vpMain').autoSize(true).scene(this.mainScene).drawBounds(false).drawBoundsData(false).mount(ige);
    this.bgScene = new IgeScene2d().id('bgScene').layer(1).translateTo(0, 0, 0).mount(this.mainScene);
    this.gameScene = new IgeScene2d().id('gameScene').layer(2).translateTo(0, 0, 0).mount(this.mainScene);
    this.fgScene = new IgeScene2d().id('fgScene').layer(3).translateTo(0, 0, 0).mount(this.mainScene);
    this.vpMain._oldResizeEvent = this.vpMain._resizeEvent;
    this.vpMain._resizeEvent = (function(_this) {
      return function(event) {
        _this.vpMain._oldResizeEvent.call(_this.vpMain, event);
        return _this._resizeEvent.call(_this);
      };
    })(this);
    return this.vpMain._resizeEvent();
  },
  setupEntities: function() {
    var grid;
    return grid = new Grid(SL.GRID_SIZE, SL.TILE_SIZE).id('grid').translateTo(-(SL.GRID_SIZE / 2 - 0.5) * SL.TILE_SIZE, -(SL.GRID_SIZE / 2 - 0.5) * SL.TILE_SIZE, 0).mount(this.gameScene);
  },
  convertToLongString: function(shortString) {
    var longUrl;
    longUrl = null;
    $.get("https://www.googleapis.com/urlshortener/v1/url?key=" + SL.GOOGLE_API_KEY + "&shortUrl=http://goo.gl/" + shortString, function(data) {
      return longUrl = data.longUrl;
    });
    if ((longUrl != null) && longUrl.split('?q=').length > 0) {
      return longUrl.split('?q=')[1];
    }
  },
  convertToShortString: function(longString) {
    var shortUrl;
    shortUrl = null;
    $.post("https://www.googleapis.com/urlshortener/v1/url?key=" + SL.GOOGLE_API_KEY, '{"longUrl": "foolmoron.io?q=' + longString + '"}', function(data) {
      return shortUrl = data.id;
    });
    if (shortUrl != null) {
      return shortUrl.split('/')[shortUrl.split('/').length - 1];
    }
  },
  _resizeEvent: function() {
    var windowWidth, _ref1, _ref2;
    if (!this.vpMain.resizing) {
      windowWidth = (_ref1 = (_ref2 = window.innerWidth) != null ? _ref2 : document.documentElement.clientWidth) != null ? _ref1 : d.getElementsByTagName('body')[0].clientWidth;
      if (windowWidth <= 740) {
        this.vpMain.resizing = true;
        this.vpMain.minimumVisibleArea(740, 700);
        return this.vpMain.resizing = false;
      } else {
        delete this.vpMain._lockDimension;
        return this.vpMain.scaleTo(1, 1, 1);
      }
    }
  }
});

if ((typeof module !== "undefined" && module !== null ? module.exports : void 0) != null) {
  module.exports = Client;
}
